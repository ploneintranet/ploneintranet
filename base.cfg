[buildout]
extends =
    test-5.0.x.cfg
    versions.cfg
    soft-versions.cfg

package-name = ploneintranet
package-extras = [develop]
versions = versions

parts +=
    fetchrelease
    scripts
    robot
    flake8
    code-analysis
    createcoverage
    coverage-report

show-picked-versions = true

always-checkout = true
extensions = mr.developer
auto-checkout =
    sphinx.themes.plone
    plone.api
    Products.CMFPlone
    plone.app.theming

test-eggs  =
    ploneintranet[test]
    Products.CMFPlone[test]
    plone.app.theming[test]

develop += .

eggs +=
    ${:package-name} ${buildout:package-extras}
    Products.CMFPlone
    plone.app.theming

[instance]
environment-vars +=
# Set ASYNC_ENABLED false to execute tasks immediately.
# Useful for dev and testing set this to true for production use
    ASYNC_ENABLED false

[test]
recipe = collective.xmltestreport
defaults = ['--auto-color', '--auto-progress', '--xml', '--ignore_dir=bmponents', '--ignore_dir=node_modules', '-v', '-m', 'ploneintranet']
eggs = ${buildout:test-eggs}
environment = testenv

[testenv]
PLONE_CSRF_DISABLED = true
ASYNC_ENABLED = false

[fetchrelease]
recipe = plone.recipe.command
command = make fetchrelease
update-command = make fetchrelease

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[scripts]
recipe = zc.recipe.egg
dependent-scripts = true
interpreter = zopepy
eggs = ${buildout:package-name} [test,develop,release]

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]

[flake8]
recipe = zc.recipe.egg
eggs = flake8
       ${instance:eggs}
entry-points =
    flake8=flake8.run:main

[code-analysis]
recipe = plone.recipe.codeanalysis
pre-commit-hook = True
directory = ${buildout:directory}/src/ploneintranet

flake8 = True
# ignore complexity
flake8-ignore = C901
deprecated-aliases = False
utf8-header = False
clean-lines = False
prefer-single-quotes = False
pep3101 = False
imports = False
debug-statements = False

return-status-codes = True

clean-lines-exclude =
    ${buildout:directory}/src/ploneintranet.theme/src/bower_components
    ${buildout:directory}/src/ploneintranet.theme/node_modules/
    ${buildout:directory}/src/ploneintranet.theme/src/ploneintranet/theme/static/generated
    ${buildout:directory}/src/ploneintranet.theme/prototype
    ${buildout:directory}/src/ploneintranet.theme/release
    ${buildout:directory}/src/ploneintranet.theme/test-bundle

flake8-exclude = bootstrap.py,docs,pre-commit,bower_components,node_modules,plone.recipe.codeanalysis

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage

[coverage-report]
recipe = collective.recipe.template
input = inline:
   #!/bin/bash
   ${buildout:bin-directory}/createcoverage ${buildout:bin-directory}/test
mode = 755
output = ${buildout:bin-directory}/coverage-report

[sphinx]
recipe = zc.recipe.egg
eggs =
    Sphinx
    sphinx.themes.plone
    sphinxcontrib-zopeext
    sphinxcontrib-spelling
    pyenchant
    ploneintranet
#    ctypes # this bugger not being available was the cause of pyenchant not being installable. Unfortunately it doesn't install on macos.

[sources]
sphinx.themes.plone = git https://github.com/plone/sphinx.themes.plone.git pushurl=git@github.com:plone/sphinx.themes.plone.git
plone.api = git https://github.com/plone/plone.api.git pushurl=git@github.com:plone/plone.api.git rev=6da64a88e008c7b3a31cd4408a107a108fbbff32
Products.CMFPlone = git https://github.com/ploneintranet/Products.CMFPlone.git pushurl=git@github.com:ploneintranet/Products.CMFPlone.git
plone.app.theming = git https://github.com/ploneintranet/plone.app.theming.git pushurl=git@github.com:ploneintranet/plone.app.theming.git

