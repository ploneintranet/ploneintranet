[buildout]
extends =
    test-5.0.x.cfg
    versions.cfg
    soft-versions.cfg

package-name = ploneintranet
package-extras = [develop]
versions = versions

parts +=
    fetchrelease
    scripts
    robot
    flake8
    code-analysis
    createcoverage
    coverage-report

show-picked-versions = true

always-checkout = true
extensions = mr.developer
auto-checkout =
    collective.celery
    slc.docconv
    sphinx.themes.plone
    collective.externaleditor

test-eggs  =
    ploneintranet[test]
    Products.CMFPlone[test]
    plone.app.theming[test]

develop += .

eggs +=
    ${:package-name} ${buildout:package-extras}
    Products.CMFPlone
    plone.app.theming

[instance]
environment-vars +=
# When you add tasks, inset the module name here and undcomment the line
#    CELERY_IMPORTS ('mypackage.tasks.tasks',)
    BROKER_URL sqla+sqlite:///${buildout:directory}/var/celerydb.sqlite?timeout=30
    CELERY_RESULT_BACKEND db+sqlite:///${buildout:directory}/var/celeryresults.sqlite?timeout=30
# CELERY_ALWAYS_EAGER executes tasks immediately. Do not remove, else you need a ZEO server
    CELERY_ALWAYS_EAGER True

[test]
recipe = collective.xmltestreport
defaults = ['--auto-color', '--auto-progress', '--xml', '--ignore_dir=bmponents', '--ignore_dir=node_modules', '-v', '-m', 'ploneintranet']
eggs = ${buildout:test-eggs}
environment = testenv

[testenv]
PLONE_CSRF_DISABLED = true

[fetchrelease]
recipe = plone.recipe.command
command = make fetchrelease
update-command = make fetchrelease

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[scripts]
recipe = zc.recipe.egg
dependent-scripts = true
interpreter = zopepy
eggs = ${buildout:package-name} [test,develop,release]

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]

[flake8]
recipe = zc.recipe.egg
eggs = flake8
       ${instance:eggs}
entry-points =
    flake8=flake8.run:main

[code-analysis]
recipe = plone.recipe.codeanalysis
pre-commit-hook = True
directory = ${buildout:directory}/src/ploneintranet

flake8 = True
# ignore complexity
flake8-ignore = C901
deprecated-aliases = False
utf8-header = False
clean-lines = False
prefer-single-quotes = False
pep3101 = False
imports = False
debug-statements = False

return-status-codes = True

clean-lines-exclude =
    ${buildout:directory}/src/ploneintranet.theme/src/bower_components
    ${buildout:directory}/src/ploneintranet.theme/node_modules/
    ${buildout:directory}/src/ploneintranet.theme/src/ploneintranet/theme/static/generated
    ${buildout:directory}/src/ploneintranet.theme/prototype
    ${buildout:directory}/src/ploneintranet.theme/release
    ${buildout:directory}/src/ploneintranet.theme/test-bundle

flake8-exclude = docs,pre-commit,bower_components,node_modules,plone.recipe.codeanalysis

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage

[coverage-report]
recipe = collective.recipe.template
input = inline:
   #!/bin/bash
   ${buildout:bin-directory}/createcoverage ${buildout:bin-directory}/test
mode = 755
output = ${buildout:bin-directory}/coverage-report

[docconv-server]
recipe = plone.recipe.zope2instance
http-address = 6310
eggs =
    Plone
    slc.docconv
file-storage = ${buildout:directory}/var/filestorage/Data-docconv.fs

[sphinx]
recipe = zc.recipe.egg
eggs =
    Sphinx
    sphinx.themes.plone
    sphinxcontrib-zopeext
    sphinxcontrib-spelling
    pyenchant
    ploneintranet
#    ctypes # this bugger not being available was the cause of pyenchant not being installable. Unfortunately it doesn't install on macos.

[sources]
collective.celery = git https://github.com/collective/collective.celery pushurl=git@github.com:collective/collective.celery
slc.docconv = git https://github.com/syslabcom/slc.docconv.git pushurl=git@github.com:syslabcom/slc.docconv.git
sphinx.themes.plone = git https://github.com/plone/sphinx.themes.plone.git pushurl=git@github.com:plone/sphinx.themes.plone.git
collective.externaleditor = git https://github.com/collective/collective.externaleditor.git pushurl=git@github.com:collective/collective.externaleditor.git branch=registry
