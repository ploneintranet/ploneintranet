<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:solr="http://namespaces.ploneintranet.org/search/solr"
    i18n_domain="ploneintranet.search.solr">

  <include package="zope.component" file="meta.zcml" />
  <include package="zope.security" file="meta.zcml" />
  <include package="collective.indexing" />
  <include file="meta.zcml" />

  <!-- Querying -->

  <class class="scorched.connection.SolrInterface">
    <implements interface=".interfaces.IConnection" />
  </class>
 
  <class class="scorched.response.SolrResponse">
    <implements interface=".interfaces.IResponse" />
  </class>

  <adapter for=".interfaces.IConnectionConfig"
           factory=".adapters.connection" />
  <adapter for=".interfaces.IConnection"
           factory=".adapters.search_query" />
  <adapter factory=".adapters.SearchResponse" />
  <utility provides="..interfaces.ISiteSearch"
           factory=".utilities.SiteSearch" />
  <utility provides=".interfaces.IMaintenance"
           factory=".utilities.Maintenance"
           />

  <!-- Indexing -->
  <adapter name="path_string"
           factory=".indexers.path_string" />
  <adapter name="path_depth"
           factory=".indexers.path_depth" />
  <adapter name="path_parents"
           factory=".indexers.path_parents" />
  <adapter factory=".indexers.ContentAdder"
           for="plone.dexterity.interfaces.IDexterityContent
                .interfaces.IConnection"
           name="default"
           />
  <adapter factory=".indexers.BinaryAdder"
           for="plone.dexterity.interfaces.IDexterityContent
                .interfaces.IConnection"
           name="File"
           />
  <!-- Actually we don't really want to index image blob data -->
  <!--adapter factory=".indexers.BinaryAdder"
           for="plone.dexterity.interfaces.IDexterityContent
                .interfaces.IConnection"
           name="Image"
           /-->

  <utility provides="collective.indexing.interfaces.IIndexQueueProcessor"
           factory=".indexers.ContentIndexer" />
  
</configure>
